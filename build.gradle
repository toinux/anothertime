plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id "com.github.node-gradle.node" version "7.0.1"
}

group = 'org.antonus'
version = '0.0.5'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-json'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.github.ben-manes.caffeine:caffeine'
    implementation 'com.jayway.jsonpath:json-path'
    implementation 'net.minidev:json-smart'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register('npmInstalls', NpmTask) {
    workingDir = file("${project.projectDir}/front")
    args = ["install"]
}

tasks.register('npmBuild', NpmTask) {
    dependsOn npmInstalls
    workingDir = file("${project.projectDir}/front")
    args = ["run", "build"]
    inputs.dir(fileTree("front/src").exclude("**/*.test.js").exclude("**/*.spec.js").exclude("**/__tests__/**/*.js"))
    inputs.dir("front/node_modules")
    inputs.dir("front/public")
    outputs.dir("front/build")
}

tasks.register('copyReact', Copy) {
    dependsOn npmBuild
    from "front/build"
    into 'build/resources/main/static/'
}

compileJava {
    dependsOn copyReact
}
